package demos.genetic;

import libai.genetics.chromosomes.BinaryChromosome;
import libai.genetics.chromosomes.Chromosome;
import libai.genetics.Fitness;
import libai.genetics.Engine;

/**
 *
 * @author kronenthaler
 */
public class BinaryPanel extends javax.swing.JPanel implements Fitness {
    /**
     * Creates new form GeneticPanel
     */
    public BinaryPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        jTextPane1.setText("Evolve a population of binary chromosomes to approximate the function x = e^-x. Having a precission of 1.e-5. \nThe evolving algorithm uses the roulette selection method and elitism. The pm = 0.01 and the pc = 0.6, with a population of 200 individuals.\nThe best chromosome is showed in its binary form and the representing value.\n");
        jScrollPane1.setViewportView(jTextPane1);

        jButton1.setText("Evolve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jProgressBar1.setString("evolving");
        jProgressBar1.setStringPainted(true);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextPane1.setText("");
        final Fitness me = this;
        new Thread(new Runnable() {
            public void run() {
                int MaxVal = 1;
                int MinVal = 0;
                int Nbits = (int) Math.ceil(Math.log10(1 + ((MaxVal - MinVal) / 1.e-5)) / Math.log10(2));

                Engine engine = new Engine(BinaryChromosome.class, 200, Nbits, 0.6, 0.01, me);
                engine.setProgressBar(jProgressBar1);
                BinaryChromosome best = (BinaryChromosome) engine.evolve(2000);

                double x = best.decode(0, 1);
                jTextPane1.setText(jTextPane1.getText() + "Best Chromosome: " + best + " = " + x + "\n");
                jTextPane1.setText(jTextPane1.getText() + x + " = x ~ e^-x = " + Math.exp(-x) + "\n");
                jTextPane1.setText(jTextPane1.getText() + "Difference = " + (Math.exp(-x) - x) + "\n");
            }
        }).start();
}//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    public double fitness(Chromosome c) {
        double x = ((BinaryChromosome) c).decode(0, 1);
        return Math.abs(Math.exp(-x) - x); //=>0 si son iguales,
    }

    public boolean isBetter(double fitness, double best) {
        return fitness < best;
    }

    public double theWorst() {
        return Double.MAX_VALUE;
    }
}
