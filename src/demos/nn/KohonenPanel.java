package demos.nn;

import libai.nn.unsupervised.Kohonen;
import libai.common.Matrix;
import demos.common.SimpleProgressDisplay;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author kronenthaler
 */
public class KohonenPanel extends javax.swing.JPanel {
	static double f(double x) {
		return Math.sin(x) + Math.cos(x);
	}
	int map[][], map2[][];

	/**
	 * Creates new form MPLPPanel
	 */
	public KohonenPanel() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        canvas = new JPanel(){
            public void paint(Graphics gr){
                super.paint(gr);
                if(map == null) return;
                int pixelW = getWidth()/map[0].length;
                int pixelH = getHeight()/map.length;
                for(int j=0;j<map[0].length;j++){
                    for(int i=0;i<map.length;i++){
                        int r=(map[i][j]>>>16)&0x000000ff;
                        int g=(map[i][j]>>>8)&0x000000ff;
                        int b=map[i][j]&0x000000ff;
                        gr.setColor(new Color(r,g,b));
                        gr.fillRect(j*pixelW, i*pixelH, pixelW, pixelH);
                    }
                }
            }
        };

        jProgressBar1.setString("training");
        jProgressBar1.setStringPainted(true);

        jButton1.setText("Train");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextPane1.setText("Train a Kohonen network to learn the colors in RGB mode.");
        jScrollPane1.setViewportView(jTextPane1);

        canvas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.jdesktop.layout.GroupLayout canvasLayout = new org.jdesktop.layout.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(
            canvasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 534, Short.MAX_VALUE)
        );
        canvasLayout.setVerticalGroup(
            canvasLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 231, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, canvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jProgressBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(canvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		jTextPane1.setText("");
		new Thread(new Runnable() {
			public void run() {
				int t = 0;
				int r = 0, g = 0, b = 0;
				int delta = 16;

				int n = delta * delta * delta;
				int m = 3; //rgb
				delta = 256 / (delta - 1);
				final int test = n / 4;

				final Matrix[] p = new Matrix[n];
				final Matrix[] ex = new Matrix[n];
				int[] classes = new int[n];

				for (r = 0; r <= 255; r += delta) {
					for (g = 0; g <= 255; g += delta) {
						for (b = 0; b <= 255; b += delta) {
							p[t] = new Matrix(3, 1);
							p[t].position(0, 0, r);
							p[t].position(1, 0, g);
							p[t].position(2, 0, b);

							ex[t] = new Matrix(1, 1);
							ex[t].position(0, 0, (classes[t++] = ((r << 16) | (g << 8) | b) & 0x00ffffff));
						}
					}
				}

				p[p.length - 1].position(0, 0, 1);
				p[p.length - 1].position(1, 0, 1);
				p[p.length - 1].position(2, 0, 1);

				ex[p.length - 1].position(0, 0, (classes[p.length - 1] = ((1 << 16) | (1 << 8) | 1) & 0x00ffffff));

				int nperlayer[] = {m, 30, 40};
				final Kohonen net = new Kohonen(nperlayer, 10);
				net.setProgressBar(new SimpleProgressDisplay(jProgressBar1));
				net.train(p, ex, 1, 20, 0, p.length - test);

				map = net.getMap();
				canvas.repaint();

				jTextPane1.setText(jTextPane1.getText() + "Error for training set: " + net.error(p, ex, 0, p.length - test));
				jTextPane1.setText(jTextPane1.getText() + "\nError for test set: " + net.error(p, ex, p.length - test, test));
			}
		}).start();
	}//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel canvas;
    private javax.swing.JButton jButton1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
